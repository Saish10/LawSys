# Generated by Django 5.1.3 on 2024-12-23 16:12

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('internal_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Internal ID', unique=True, verbose_name='Internal ID')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the object is active or not', verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the object was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the object was last updated', verbose_name='Updated At')),
                ('email', models.EmailField(help_text='Enter a valid email address (e.g., example@domain.com).', max_length=254, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(help_text='First name', max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(help_text='Last Name', max_length=255, verbose_name='Last Name')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('N', 'Prefer not to say')], default='N', help_text='Gender', max_length=1, verbose_name='Gender')),
                ('date_of_birth', models.DateField(blank=True, help_text='Date of Birth', null=True, verbose_name='Date of Birth')),
                ('phone', models.CharField(blank=True, help_text='Phone number', max_length=15, null=True, verbose_name='Phone Number')),
                ('address', models.TextField(blank=True, help_text='Address', null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, help_text='City', max_length=255, null=True, verbose_name='City')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Staff status')),
                ('country', models.ForeignKey(blank=True, help_text='Country', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='base.country', verbose_name='Country')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('state', models.ForeignKey(blank=True, help_text='State', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='base.state', verbose_name='State')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User Account',
                'verbose_name_plural': 'User Accounts',
                'db_table': 'user_accounts',
            },
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Internal ID', unique=True, verbose_name='Internal ID')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the object is active or not', verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the object was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the object was last updated', verbose_name='Updated At')),
                ('email', models.EmailField(help_text='Enter a valid email address (e.g., example@domain.com).', max_length=254, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(help_text='First name', max_length=255, verbose_name='First Name')),
                ('last_name', models.CharField(help_text='Last Name', max_length=255, verbose_name='Last Name')),
                ('token', models.UUIDField(default=uuid.uuid4, help_text='Invitation Token', verbose_name='Token')),
                ('is_registered', models.BooleanField(default=False, help_text='Registered?', verbose_name='Registered?')),
                ('registered_date', models.DateField(blank=True, null=True, verbose_name='Registered Date')),
                ('invited_by', models.ForeignKey(help_text='Invited By', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to=settings.AUTH_USER_MODEL, verbose_name='Invited By')),
                ('role', models.ForeignKey(help_text='Role', on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='auth.group', verbose_name='Role')),
            ],
            options={
                'verbose_name': 'Invitation',
                'verbose_name_plural': 'Invitations',
                'db_table': 'invitations',
            },
        ),
    ]
